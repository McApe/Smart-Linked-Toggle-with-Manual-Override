blueprint:
  name: Conditional Linked Switches with Individual Manual Overrides
  description: Each controlled switch is turned on when the trigger switch is turned on. If a controlled switch was manually turned on before the trigger, it stays on when the trigger is turned off.
  domain: automation
  input:
    controlled_switches:
      name: Controlled Switches
      selector:
        entity:
          multiple: true
          domain: input_boolean
    trigger_switch:
      name: Trigger Switch
      selector:
        entity:
          domain: input_boolean
    override_flags:
      name: Manual Activation Flags (one per controlled switch)
      selector:
        entity:
          multiple: true
          domain: input_boolean

mode: queued

variables:
  controlled_list: !input controlled_switches
  override_list: !input override_flags

trigger:
  - platform: state
    entity_id: !input trigger_switch
    from: 'off'
    to: 'on'
    id: trigger_on
  - platform: state
    entity_id: !input trigger_switch
    from: 'on'
    to: 'off'
    id: trigger_off
  - platform: state
    entity_id: !input controlled_switches
    to: 'on'
    for:
      seconds: 1
    id: controlled_manual

condition: []

action:
  - choose:
      - conditions:
          - condition: trigger
            id: controlled_manual
          - condition: state
            entity_id: !input trigger_switch
            state: 'off'
        sequence:
          - repeat:
              for_each: "{{ range(0, controlled_list | length) | list }}"
              sequence:
                - condition: template
                  value_template: >
                    {{ state_attr(trigger.to_state.entity_id, 'entity_id') == controlled_list[repeat.item] }}
                - service: input_boolean.turn_on
                  target:
                    entity_id: "{{ override_list[repeat.item] }}"

      - conditions:
          - condition: trigger
            id: trigger_on
        sequence:
          - repeat:
              for_each: controlled_list
              sequence:
                - service: input_boolean.turn_on
                  target:
                    entity_id: "{{ repeat.item }}"
          - repeat:
              for_each: override_list
              sequence:
                - service: input_boolean.turn_off
                  target:
                    entity_id: "{{ repeat.item }}"

      - conditions:
          - condition: trigger
            id: trigger_off
        sequence:
          - repeat:
              for_each: "{{ range(0, controlled_list | length) | list }}"
              sequence:
                - condition: state
                  entity_id: "{{ override_list[repeat.item] }}"
                  state: 'off'
                - service: input_boolean.turn_off
                  target:
                    entity_id: "{{ controlled_list[repeat.item] }}"

    default: []
